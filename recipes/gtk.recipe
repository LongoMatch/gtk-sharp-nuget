# -*- Mode: Python -*- vi:si:et:sw=4:sts=4:ts=4:syntax=python

class Recipe(recipe.Recipe):
    name = 'gtk+'
    version = '2.24.30'
    remotes = {'origin' : 'git@github.com:fluendo/gtk.git'}
    # TODO: check license - some source files are LGPLv2, others LGPLv2+,
    #       others LGPLv2.1+, COPYING is LGPLv2 and the webpage states LGPLv2.1
    licenses = [License.LGPLv2_1Plus]
    configure_options = '--with-included-immodules '
    btype = BuildType.AUTOTOOLS
    config_sh = 'sh autogen.sh'
    deps = ['glib', 'atk', 'pango', 'gdk-pixbuf', 'cairo', 'gtk-doc-lite']

    files_libs = ['libgailutil']
    files_bins = ['gtk-update-icon-cache', 'gtk-query-immodules-2.0']
    files_devel = [
        'bin/gtk-builder-convert',
        'lib/gtk-2.0/include',
        'lib/pkgconfig/gtk+-2.0.pc',
        'lib/pkgconfig/gdk-2.0.pc',
        'lib/pkgconfig/gail.pc',
        'include/gtk-2.0',
        'include/gail-1.0',
    ]
    files_modules = ['lib/gtk-2.0/modules/libgail%(mext)s']
    platform_files_libs = {
        Platform.WINDOWS: ['libgtk-win32-2.0', 'libgdk-win32-2.0'],
        Platform.DARWIN: ['libgtk-quartz-2.0', 'libgdk-quartz-2.0'],
        Platform.LINUX: ['libgtk-x11-2.0', 'libgdk-x11-2.0'],
        }
    platform_files_devel = {
        Platform.WINDOWS: [
            'lib/pkgconfig/gtk+-win32-2.0.pc', 'lib/pkgconfig/gdk-win32-2.0.pc'],
        Platform.DARWIN: [
            'lib/pkgconfig/gtk+-quartz-2.0.pc', 'lib/pkgconfig/gdk-quartz-2.0.pc'],
        Platform.LINUX: [
            'lib/pkgconfig/gtk+-x11-2.0.pc', 'lib/pkgconfig/gdk-x11-2.0.pc'],
        }
    files_themes = [
        'lib/gtk-2.0/2.10.0/engines/libpixmap%(mext)s'
    ]
    platform_files_themes = {
        Platform.LINUX: [
            'share/themes/Default/gtk-2.0-key/gtkrc'],
        Platform.DARWIN: [
            'share/themes/Mac/gtk-2.0-key/gtkrc'],
        }
    platform_files_modules = {
        Platform.LINUX: [
            'lib/gtk-2.0/modules/libferret%(mext)s',],
        Platform.DARWIN: [
            'lib/gtk-2.0/modules/libferret%(mext)s',],
        }
    files_lang = ['gtk20', 'gtk20-properties']


    def prepare(self):
        if self.config.target_platform != Platform.LINUX:
            self.configure_options += '--disable-gtk-doc '
        if self.config.target_platform == Platform.WINDOWS:
            self.configure_options += '--disable-papi --disable-cups '
        elif self.config.target_platform == Platform.DARWIN:
            self.configure_options += '--with-gdktarget=quartz '
            self.append_env('AM_CPPFLAGS', ' -xobjective-c ')
        elif self.config.target_platform == Platform.LINUX:
            # Can't change CFLAGS and use configure cache
            self.can_use_configure_cache = False

    async def configure(self):
        await super().configure()
        shell.replace(os.path.join(self.build_dir, 'Makefile'),
            {'SRC_SUBDIRS = gdk gtk modules demos tests perf': 'SRC_SUBDIRS = gdk gtk modules'})

    async def install(self):
        p = os.path.join(self.config.prefix, 'lib', 'gtk-2.0', '2.10.0')
        if not os.path.exists(p):
            os.makedirs(p)
        await super().install()
